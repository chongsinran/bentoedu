/*! VLCPlayer 2014-12-30 05:12:06 */
angular.module("kdarcel.vlc-player",[]).constant("VERSION","v1.1.2").run(function(a,b){a.version=b}).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"},b.vlc.toolbarClass="toolbar-vlc",b.vlc.fullscreenClass="vlc-window"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){32==a.keyCode&&b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},$(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange",function(){var a=b.vlc.input.position;b.vlc.playlist.stop(),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},b.vlc.toolbarClass="toolbar-vlc-fullscreen",b.vlc.fullscreenClass="vlc-fullscreen"):(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},b.vlc.toolbarClass="toolbar-vlc",b.vlc.fullscreenClass="vlc-window"),b.vlc.playlist.play(),b.vlc.input.position=a}),b.vlcToggleFullscreen=function(){if(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement)document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen();else{var a=document.getElementById("player");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keydown="vlcKeyEvent($event);">\n    <div ng-class="{true: \'player-blur-vlc\' }[vlc.buffer == true]" class="{{ vlc.fullscreenClass }}">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="{{ vlc.toolbarClass }}" ng-class="{true: \'toolbar-active-vlc\', false: \'toolbar-disabled-vlc\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress-vlc">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default  btn-default-vlc btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/{{ version }}" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).constant("VERSION","v1.1.1").run(function(a,b){a.version=b}).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"},b.vlc.toolbarClass="toolbar-vlc",b.vlc.fullscreenClass="vlc-window"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){32==a.keyCode&&b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},$(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange",function(){var a=b.vlc.input.position;b.vlc.playlist.stop(),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},b.vlc.toolbarClass="toolbar-vlc-fullscreen",b.vlc.fullscreenClass="vlc-fullscreen"):(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},b.vlc.toolbarClass="toolbar-vlc",b.vlc.fullscreenClass="vlc-window"),b.vlc.playlist.play(),b.vlc.input.position=a}),b.vlcToggleFullscreen=function(){if(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement)document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen();else{var a=document.getElementById("player");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keydown="vlcKeyEvent($event);">\n    <div ng-class="{true: \'player-blur-vlc\' }[vlc.buffer == true]" class="{{ vlc.fullscreenClass }}">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="{{ vlc.toolbarClass }}" ng-class="{true: \'toolbar-active-vlc\', false: \'toolbar-disabled-vlc\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress-vlc">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default  btn-default-vlc btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/{{ version }}" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).constant("VERSION","v1.1.1").run(function(a,b){a.version=b}).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"},b.vlc.toolbarClass="toolbar-vlc",b.vlc.fullscreenClass="vlc-window"}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){32==a.keyCode&&b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},$(document).on("webkitfullscreenchange mozfullscreenchange fullscreenchange",function(){var a=b.vlc.input.position;b.vlc.playlist.stop(),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement?(b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width},b.vlc.toolbarClass="toolbar-vlc-fullscreen",b.vlc.fullscreenClass="vlc-fullscreen"):(b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},b.vlc.toolbarClass="toolbar-vlc",b.vlc.fullscreenClass="vlc-window"),b.vlc.playlist.play(),b.vlc.input.position=a}),b.vlcToggleFullscreen=function(){if(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement)document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen();else{var a=document.getElementById("player");a.requestFullscreen?a.requestFullscreen():a.msRequestFullscreen?a.msRequestFullscreen():a.mozRequestFullScreen?a.mozRequestFullScreen():a.webkitRequestFullscreen&&a.webkitRequestFullscreen()}},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keydown="vlcKeyEvent($event);">\n    <div ng-class="{true: \'player-blur-vlc\' }[vlc.buffer == true]" class="vlc-window">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar-vlc" ng-class="{true: \'toolbar-active-vlc\', false: \'toolbar-disabled-vlc\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress-vlc">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default  btn-default-vlc btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/{{ version }}" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>\n')}]),angular.module("kdarcel.vlc-player",[]).constant("VERSION","v1.1.1").run(function(a,b){a.version=b}).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){32==a.keyCode&&b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;if(b.vlc.playlist.stop(),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement)b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen();else{b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var c=document.getElementById("player");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()}b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keydown="vlcKeyEvent($event);">\n    <div ng-class="{true: \'player-blur-vlc\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar-vlc" ng-class="{true: \'toolbar-active-vlc\', false: \'toolbar-disabled-vlc\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress-vlc">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default  btn-default-vlc btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/{{ version }}" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>\n')
}]),angular.module("kdarcel.vlc-player",[]).filter("range",function(){return function(a,b){b=parseInt(b);for(var c=0;b>c;c++)a.push(c);return a}}).filter("time2String",function(){return function a(a){if(!a)return"";var b=parseInt(a/1e3%60),c=parseInt(a/6e4%60),d=parseInt(a/36e5%24),e="";return d&&(e+=(10>d?"0"+d:d)+":"),e+=(10>c?"0"+c:c)+":",e+=10>b?"0"+b:b}}).factory("poollingFactory",function(a){function b(d,e){var f=a(d,1e3*c);return f.then(function(){b(d,e)})}var c=1;return{callFnOnInterval:b}}).directive("vlcplayer",function(a){return{restrict:"E",replace:!0,templateUrl:"VLCPlayer.tpl.html",link:function(b,c,d){var e=function(a){if(a.url&&a.filename&&(b.vlc=document.getElementById("vlc"),b.vlc)){b.vlc.playlist.items.count>0&&b.vlc.playlist.items.clear();var c=[":vout-filter=deinterlace",":deinterlace-mode=linear"],d=b.vlc.playlist.add(a.url,a.filename,c);"true"==a.autoplay&&b.vlc.playlist.playItem(d),b.vlc.version=b.vlc.versionInfo(),b.vlc.toolbarWidth={width:"640"}}};b.$watch(function(){return b.vlc&&(3==vlc.input.state&&(null==b.videoDuration&&(b.videoDuration=b.vlc.input.length),b.vlc.openning=!1,b.vlc.buffer=!1),7==vlc.input.state&&null==b.vlc.error&&(b.vlc.error=!0),(4==vlc.input.state||5==vlc.input.state||6==vlc.input.state)&&(2==vlc.input.state&&(b.vlc.buffer=!0),1==vlc.input.state&&(b.vlc.openning=!0),b.vlc.toolbar=!0)),{url:d.vlcUrl,filename:d.vlcFilename,autoplay:d.vlcAutoplay}},e,!0),b.vlcKeyEvent=function(a){32==a.keyCode&&b.vlc.playlist.togglePause()},b.vlcToolbarActive=function(a){b.vlc.toolbar=a},b.vlcTogglePause=function(){b.vlc.playlist.togglePause()},b.vlcToggleMute=function(){b.vlc.audio.toggleMute()},b.vlcSwitchAudioTrack=function(a){b.vlc.audio.track=a},b.vlcSwitchSubtitleTrack=function(a){b.vlc.subtitle.track=a},b.vlcToggleFullscreen=function(){var a=b.vlc.input.position;if(b.vlc.playlist.stop(),document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement)b.vlc.embedFullscreen={width:"640",height:"360"},b.vlc.toolbarWidth={width:"640"},document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen&&document.webkitCancelFullScreen();else{b.vlc.embedFullscreen={width:screen.width,height:screen.height},b.vlc.toolbarWidth={width:screen.width};var c=document.getElementById("player");c.requestFullscreen?c.requestFullscreen():c.msRequestFullscreen?c.msRequestFullscreen():c.mozRequestFullScreen?c.mozRequestFullScreen():c.webkitRequestFullscreen&&c.webkitRequestFullscreen()}b.vlc.playlist.play(),b.vlc.input.position=a},a.callFnOnInterval(function(){b.vlc&&(b.videoCurrentTime=b.vlc.input.time,b.vlc.timer=b.videoCurrentTime/b.videoDuration*100)})}}}),angular.module("kdarcel.vlc-player.tpl",["VLCPlayer.tpl.html"]),angular.module("VLCPlayer.tpl.html",[]).run(["$templateCache",function(a){a.put("VLCPlayer.tpl.html",'<div class="player-container" id="player" ng-keydown="vlcKeyEvent($event);">\n    <div ng-class="{true: \'player-blur-vlc\' }[vlc.buffer == true]">\n        <object classid="clsid:9BE31822-FDAD-461B-AD51-BE1D1C159921" events="true" width="100%" height="100%" tabindex="0">\n            <embed pluginspage="http://www.videolan.org"\n                   type="application/x-vlc-plugin"\n                   version="VideoLAN.VLCPlugin.2"\n                   allowfullscreen="true"\n                   width="640"\n                   height="360"\n                   toolbar="false"\n                   branding="false"\n                   windowless="true"\n                   id="vlc"\n                   ng-style="vlc.embedFullscreen"\n            ></embed>\n        </object>\n    </div>\n    <div class="video-controls" ng-mouseover="vlcToolbarActive(true);" ng-mouseleave="vlcToolbarActive(false);">\n        <div class="toolbar-vlc" ng-class="{true: \'toolbar-active-vlc\', false: \'toolbar-disabled-vlc\'}[vlc.error == true || vlc.toolbar == true]" ng-style="vlc.toolbarWidth">\n            <div class="progress-vlc">\n              <div class="progress-bar" role="progressbar" aria-valuenow="{{ vlc.timer }}" aria-valuemin="0" aria-valuemax="100" ng-style="{width : ( vlc.timer + \'%\' ) }">\n              </div>\n            </div>\n            <div class="form-inline pull-left">\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Play/Pause" ng-click="vlcTogglePause()">\n                    <span class="glyphicon" ng-class="vlc.playlist.isPlaying ? \'glyphicon-pause\' : \'glyphicon-play\'"></span>\n                </button>\n                <span class="vlc-text-white">{{ videoCurrentTime | time2String }} / {{ videoDuration | time2String }}</span>\n            </div>\n            <div class="form-inline pull-right">\n                <div class="btn-group dropup" ng-if="vlc.audio.count" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Audio language" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-sound-5-1"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.audio.count">\n                            <a href="" ng-click="vlcSwitchAudioTrack(n)">\n                                {{ vlc.audio.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.audio.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <div class="btn-group dropup" ng-if="vlc.subtitle.count" dropdown>\n                    <button type="button" class="btn btn-default  btn-default-vlc btn-xs dropdown-toggle" tooltip="Subtitles" data-toggle="dropdown">\n                        <span class="glyphicon glyphicon-subtitles"></span>\n                    </button>\n                    <ul class="dropdown-menu" role="menu">\n                        <li ng-repeat="n in [] | range:vlc.subtitle.count">\n                            <a href="" ng-click="vlcSwitchSubtitleTrack(n)">\n                                {{ vlc.subtitle.description(n) }}&nbsp;<span class="glyphicon glyphicon-ok" ng-show="vlc.subtitle.track == n"></span>\n                            </a>\n                        </li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Audio Sounds" ng-click="vlcToggleMute()">\n                    <span class="glyphicon" ng-class="vlc.audio.mute ? \'glyphicon-volume-off\' : \'glyphicon-volume-up\'"></span>\n                </button>\n                <div class="btn-group dropup" dropdown>\n                    <button type="button" class="btn btn-default btn-default-vlc btn-xs dropdown-toggle" tooltip="Parameters">\n                        <span class="glyphicon glyphicon-cog"></span>\n                    </button>\n                    <ul class="dropdown-menu">\n                        <li><a href="https://github.com/Tuxity/angular-vlc/tree/v1.0.0" target="blank"> About angular-vlc </a></li>\n                        <li><a href=""> VLC {{ vlc.version }}</a></li>\n                    </ul>\n                </div>\n                <button type="button" class="btn btn-default btn-default-vlc btn-xs" tooltip="Fullscreen" ng-click="vlcToggleFullscreen()">\n                    <span class="glyphicon glyphicon-resize-full"></span>\n                </button>\n            </div>\n        </div>\n    </div>\n    <div class="error-vlc" ng-if="vlc.error">\n        <p>There is an error with the link your given...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.buffer">\n        <p>Video is actually buffering, please wait...</p>\n    </div>\n    <div class="error-vlc" ng-if="vlc.openning">\n        <p>Video will be open in few seconds...</p>\n    </div>\n</div>')}]);